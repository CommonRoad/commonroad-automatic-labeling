image: python:3.10

stages:
  - static_check
  - test
  - deploy

variables:
  GIT_SUBMODULE_STRATEGY: recursive

before_script:
  - apt-get update
  - apt-get install -y libgl1
  - pip install poetry
  - poetry config virtualenvs.in-project true
  - git config --global url."https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.lrz.de".insteadOf "ssh://git@gitlab.lrz.de"
  - poetry install --with test
  - source .venv/bin/activate

pre_commit:
  stage: static_check
  before_script:
    - pip install pre-commit
  script:
    - pre-commit run --all-files --show-diff-on-failure

## test
test_python_versions:
  stage: test
  image: python:$PYTHON_VERSIONS
  parallel:
    matrix:
      - PYTHON_VERSIONS: [ "3.11" ]
  script:
    - coverage run -m pytest tests/
  allow_failure: true

test_with_coverage:
  stage: test
  image: python:3.10
  script:
    - coverage run -m pytest tests/
    - coverage report -m || true
    - coverage xml
  coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml

## deploy
pages:
  # push the latest documentation of the main branch to the Gitlab pages.
  # available at https://cps.pages.gitlab.lrz.de/commonroad/automatic-scenario-labeling
  stage: deploy
  only:
    - main
  publish: site
  script:
    - poetry install --with docs
    - mkdocs build
  artifacts:
    paths:
      - site
  environment:
    name: Gitlab Pages
    url: https://cps.pages.gitlab.lrz.de/commonroad/automatic-scenario-labeling

build_and_push_to_pypi_test:
  stage: deploy
  when: manual
  only:
    - main
  script:
    - poetry config repositories.test https://test.pypi.org/legacy/
    - poetry build
    - poetry publish --repository test -u __token__ -p ${CR_PYPI_TEST_API_TOKEN}

build_and_push_to_pypi_release:
  stage: deploy
  when: manual
  only:
    - main
  script:
    - poetry build
    - poetry publish -u __token__ -p ${CR_PYPI_RELEASE_API_TOKEN}
